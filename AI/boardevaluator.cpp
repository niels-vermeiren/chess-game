#include "boardevaluator.h"

int BoardEvaluator::evaluateBoard(QList<QList<Square *>> board) {

        QList<QList<double>> pawnWhiteTable ={
            { 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0 },
            { 5.0,  5.0,  5.0,  5.0,  5.0,  5.0,  5.0,  5.0 },
            { 1.0,  1.0,  2.0,  3.0,  3.0,  2.0,  1.0,  1.0 },
            { 0.5,  0.5,  1.0,  2.5,  2.5,  1.0,  0.5,  0.5 },
            { 0.0,  0.0,  0.0,  5.0,  5.0,  0.0,  0.0,  0.0 },
            { 0.5, -0.5, -1.0,  0.0,  0.0, -1.0, -0.5,  0.5 },
            { 0.5,  1.0, 1.0,  -2.0, -2.0,  1.0,  1.0,  0.5 },
            { 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0 }
        };

        QList<QList<double>> pawnBlackTable = {
            { 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0 },
            { 0.5,  1.0, 1.0,  -2.0, -2.0,  1.0,  1.0,  0.5 },
            { 0.5, -0.5, -1.0,  0.0,  0.0, -1.0, -0.5,  0.5 },
            { 0.0,  0.0,  0.0,  5.0,  5.0,  0.0,  0.0,  0.0 },
            { 0.5,  0.5,  1.0,  2.5,  2.5,  1.0,  0.5,  0.5 },
            { 1.0,  1.0,  2.0,  3.0,  3.0,  2.0,  1.0,  1.0 },
            { 5.0,  5.0,  5.0,  5.0,  5.0,  5.0,  5.0,  5.0 },
            { 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0 },
        };

        QList<QList<double>> knightTable = {
            { -5.0, -5.0, -3.0, -3.0, -3.0, -3.0, -5.0, -5.0 },
            { -4.0, -2.0,  0.0,  0.0,  0.0,  0.0, -2.0, -4.0 },
            { -3.0,  0.0,  1.0,  1.5,  1.5,  1.0,  0.0, -3.0 },
            { -3.0,  0.5,  1.5,  2.0,  2.0,  1.5,  0.5, -3.0 },
            { -3.0,  0.0,  1.5,  2.0,  2.0,  1.5,  0.0, -3.0 },
            { -3.0,  0.5,  1.0,  1.5,  1.5,  1.0,  0.5, -3.0 },
            { -4.0, -2.0,  0.0,  0.5,  0.5,  0.0, -2.0, -4.0 },
            { -5.0, -5.0, -3.0, -3.0, -3.0, -3.0, -5.0, -5.0 }
        };

        QList<QList<double>> bishopWhiteTable = {
            { -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0 },
            { -1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0 },
            { -1.0,  0.0,  0.5,  1.0,  1.0,  0.5,  0.0, -1.0 },
            { -1.0,  0.5,  0.5,  1.0,  1.0,  0.5,  0.5, -1.0 },
            { -1.0,  0.0,  1.0,  1.0,  1.0,  1.0,  0.0, -1.0 },
            { -1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0, -1.0 },
            { -1.0,  0.5,  0.0,  0.0,  0.0,  0.0,  0.5, -1.0 },
            { -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0 }
        };

        QList<QList<double>> bishopBlackTable = {
            { -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0 },
            { -1.0,  0.5,  0.0,  0.0,  0.0,  0.0,  0.5, -1.0 },
            { -1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0, -1.0 },
            { -1.0,  0.0,  1.0,  1.0,  1.0,  1.0,  0.0, -1.0 },
            { -1.0,  0.5,  0.5,  1.0,  1.0,  0.5,  0.5, -1.0 },
            { -1.0,  0.0,  0.5,  1.0,  1.0,  0.5,  0.0, -1.0 },
            { -1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0 },
            { -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0 },
        };

        QList<QList<double>> rookWhiteTable = {
            {  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0 },
            {  0.5,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  0.5 },
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5 },
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5 },
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5 },
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5 },
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5 },
            {  0.0,  0.0, 0.0,  0.5,  0.5,  0.0,  0.0,  0.0 }
        };

        QList<QList<double>> rookBlackTable = {
            {  0.0,  0.0, 0.0,  0.5,  0.5,  0.0,  0.0,  0.0 },
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5 },
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5 },
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5 },
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5 },
            { -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5 },
            {  0.5,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  0.5 },
            {  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0 },
        };

        QList<QList<double>> queenTable =
            {
            { -2.0, -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -2.0 },
            { -1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0 },
            { -1.0,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -1.0 },
            { -0.5,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -0.5 },
            {  0.0,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -0.5 },
            { -1.0,  0.5,  0.5,  0.5,  0.5,  0.5,  0.0, -1.0 },
            { -1.0,  0.0,  0.5,  0.0,  0.0,  0.0,  0.0, -1.0 },
            { -2.0, -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -2.0 }
        };

        QList<QList<double>> kingWhiteTable = {
            { -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0 },
            { -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0 },
            { -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0 },
            { -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0 },
            { -2.0, -3.0, -3.0, -4.0, -4.0, -3.0, -3.0, -2.0 },
            { -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0 },
            {  2.0,  2.0,  0.0,  0.0,  0.0,  0.0,  2.0,  2.0 },
            {  2.0,  3.0,  1.0,  0.0,  0.0,  1.0,  3.0,  2.0 }
        };

        QList<QList<double>> kingBlackTable = {
            {  2.0,  3.0,  1.0,  0.0,  0.0,  1.0,  3.0,  2.0 },
            {  2.0,  2.0,  0.0,  0.0,  0.0,  0.0,  2.0,  2.0 },
            { -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0 },
            { -2.0, -3.0, -3.0, -4.0, -4.0, -3.0, -3.0, -2.0 },
            { -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0 },
            { -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0 },
            { -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0 },
            { -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0 },
        };

    double sum = 0;
    for(int i = 0; i != board.count(); i++) {
        for(int j = 0; j != board[0].count(); j++) {
            Piece * piece = board[i][j]->getPieceOnSquare();
            if (piece->pieceType() == "") continue;
            int score = piece->pieceColour() == "black" ? piece->getScore() : - piece->getScore();
            if (piece->pieceType() == "♛") {
                score += queenTable[i][j];
            }
            if (piece->pieceType() == "♞") {
                score += knightTable[i][j];
            }
            if (piece->pieceType() == "♟") {
                score += piece->pieceColour() == "black" ? pawnBlackTable[i][j] : pawnWhiteTable[i][j];
            }
            if (piece->pieceType() == "♜") {
                score += piece->pieceColour() == "black" ? rookBlackTable[i][j] : rookWhiteTable[i][j];
            }
            if (piece->pieceType() == "♝") {
                score += piece->pieceColour() == "black" ? bishopBlackTable[i][j] : bishopWhiteTable[i][j];
            }
            if (piece->pieceType() == "♚") {
                score += piece->pieceColour() == "black" ? kingBlackTable[i][j] : kingWhiteTable[i][j];
            }
            sum += score;
        }
    }
    return sum;
}
